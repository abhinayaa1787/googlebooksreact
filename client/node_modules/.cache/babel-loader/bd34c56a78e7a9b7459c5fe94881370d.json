{"ast":null,"code":"import _classCallCheck from \"/Users/abhiaadhav/Desktop/BOOTCAMP/ASSIGNMENT/googlebooksreact/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/abhiaadhav/Desktop/BOOTCAMP/ASSIGNMENT/googlebooksreact/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/abhiaadhav/Desktop/BOOTCAMP/ASSIGNMENT/googlebooksreact/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/abhiaadhav/Desktop/BOOTCAMP/ASSIGNMENT/googlebooksreact/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/abhiaadhav/Desktop/BOOTCAMP/ASSIGNMENT/googlebooksreact/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/abhiaadhav/Desktop/BOOTCAMP/ASSIGNMENT/googlebooksreact/client/src/pages/Saved.js\";\nimport React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport ViewBtn from \"../components/ViewBtn\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\"; // import { Col, Row, Container } from \"../components/Grid\";\n\nimport { List, ListItem } from \"../components/List\";\n\nvar Saved =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Saved, _Component);\n\n  function Saved() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Saved);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Saved)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: []\n    };\n\n    _this.loadBooks = function () {\n      API.getBooks().then(function (res) {\n        return _this.setState({\n          books: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.deleteBook = function (id) {\n      API.deleteBook(id).then(function (res) {\n        return _this.loadBooks();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Saved, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadBooks();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.state.books.length ? React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, this.state.books.map(function (book) {\n        return React.createElement(ListItem, {\n          key: book.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, \"                                    \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, book.volumeInfo.title), React.createElement(\"img\", {\n          alt: book.volumeInfo.title,\n          src: book.volumeInfo.imageLinks.smallThumbnail,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }), React.createElement(ViewBtn, {\n          href: book.volumeInfo.previewLink,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }), React.createElement(DeleteBtn, {\n          onClick: function onClick() {\n            return deleteBook(book.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }));\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"No saved books\")));\n    } //     return (\n    //       <Container fluid>\n    //         <Row>\n    //           <Col size=\"md-6\">\n    //             <Jumbotron>\n    //               <h1>What Books Should I Read?</h1>\n    //             </Jumbotron>\n    //             <form>\n    //               <Input\n    //                 value={this.state.title}\n    //                 onChange={this.handleInputChange}\n    //                 name=\"title\"\n    //                 placeholder=\"Title (required)\"\n    //               />\n    //               <Input\n    //                 value={this.state.author}\n    //                 onChange={this.handleInputChange}\n    //                 name=\"author\"\n    //                 placeholder=\"Author (required)\"\n    //               />\n    //               <TextArea\n    //                 value={this.state.synopsis}\n    //                 onChange={this.handleInputChange}\n    //                 name=\"synopsis\"\n    //                 placeholder=\"Synopsis (Optional)\"\n    //               />\n    //               <FormBtn\n    //                 disabled={!(this.state.author && this.state.title)}\n    //                 onClick={this.handleFormSubmit}\n    //               >\n    //                 Submit Book\n    //               </FormBtn>\n    //             </form>\n    //           </Col>\n    //           <Col size=\"md-6 sm-12\">\n    //             <Jumbotron>\n    //               <h1>Books On My List</h1>\n    //             </Jumbotron>\n    //             {this.state.books.length ? (\n    //               <List>\n    //                 {this.state.books.map(book => (\n    //                   <ListItem key={book._id}>\n    //                     <Link to={\"/books/\" + book._id}>\n    //                       <strong>\n    //                         {book.title} by {book.author}\n    //                       </strong>\n    //                     </Link>\n    //                     <DeleteBtn onClick={() => this.deleteBook(book._id)} />\n    //                   </ListItem>\n    //                 ))}\n    //               </List>\n    //             ) : (\n    //               <h3>No Results to Display</h3>\n    //             )}\n    //           </Col>\n    //         </Row>\n    //       </Container>\n    //     );\n    //   }\n\n  }]);\n\n  return Saved;\n}(Component);\n\nexport default Saved;","map":{"version":3,"sources":["/Users/abhiaadhav/Desktop/BOOTCAMP/ASSIGNMENT/googlebooksreact/client/src/pages/Saved.js"],"names":["React","Component","DeleteBtn","Jumbotron","ViewBtn","API","Link","List","ListItem","Saved","state","books","loadBooks","getBooks","then","res","setState","data","catch","err","console","log","deleteBook","id","length","map","book","volumeInfo","title","imageLinks","smallThumbnail","previewLink"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport ViewBtn from \"../components/ViewBtn\";\n\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\n// import { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\n\nclass Saved extends Component {\n  state = {\n    books: []\n  };\n\n  componentDidMount() {\n    this.loadBooks();\n  }\n\n  loadBooks = () => {\n    API.getBooks()\n      .then(res =>\n        this.setState({ books: res.data})\n      )\n      .catch(err => console.log(err));\n  };\n\n  deleteBook = id => {\n    API.deleteBook(id)\n      .then(res => this.loadBooks())\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n        <div>\n            <div>\n                 {this.state.books.length ? (\n                <List>\n\n                    {this.state.books.map(book => (\n                        <ListItem key={book.id}      >                                    <strong>{book.volumeInfo.title}</strong>\n                        <img alt={book.volumeInfo.title} src={book.volumeInfo.imageLinks.smallThumbnail}></img>\n\n    <ViewBtn href={book.volumeInfo.previewLink}/> \n                                <DeleteBtn\n                                onClick ={\n                                    () => deleteBook(book.id)} />\n                        </ListItem>\n                    ))}\n\n                </List>\n\n                ) : (\n          <h3>No saved books</h3>\n        )} \n            </div>\n        </div>\n    );\n}\n\n//     return (\n//       <Container fluid>\n//         <Row>\n//           <Col size=\"md-6\">\n//             <Jumbotron>\n//               <h1>What Books Should I Read?</h1>\n//             </Jumbotron>\n//             <form>\n//               <Input\n//                 value={this.state.title}\n//                 onChange={this.handleInputChange}\n//                 name=\"title\"\n//                 placeholder=\"Title (required)\"\n//               />\n//               <Input\n//                 value={this.state.author}\n//                 onChange={this.handleInputChange}\n//                 name=\"author\"\n//                 placeholder=\"Author (required)\"\n//               />\n//               <TextArea\n//                 value={this.state.synopsis}\n//                 onChange={this.handleInputChange}\n//                 name=\"synopsis\"\n//                 placeholder=\"Synopsis (Optional)\"\n//               />\n//               <FormBtn\n//                 disabled={!(this.state.author && this.state.title)}\n//                 onClick={this.handleFormSubmit}\n//               >\n//                 Submit Book\n//               </FormBtn>\n//             </form>\n//           </Col>\n//           <Col size=\"md-6 sm-12\">\n//             <Jumbotron>\n//               <h1>Books On My List</h1>\n//             </Jumbotron>\n//             {this.state.books.length ? (\n//               <List>\n//                 {this.state.books.map(book => (\n//                   <ListItem key={book._id}>\n//                     <Link to={\"/books/\" + book._id}>\n//                       <strong>\n//                         {book.title} by {book.author}\n//                       </strong>\n//                     </Link>\n//                     <DeleteBtn onClick={() => this.deleteBook(book._id)} />\n//                   </ListItem>\n//                 ))}\n//               </List>\n//             ) : (\n//               <h3>No Results to Display</h3>\n//             )}\n//           </Col>\n//         </Row>\n//       </Container>\n//     );\n//   }\n}\n\nexport default Saved;\n"]},"metadata":{},"sourceType":"module"}